type TimeType {
    start: String
    end: String
}

type AdminUserType {
    id: Int
}

type LocationType {
    lang: Float
    long: Float
}

type EventType {
    pointId: Int
    title: String
    time: TimeType
    description: String
    people: [PeopleType]
    admins: [AdminUserType]
    tags: [Int]
}

# Локация
type PointType {
    title: String
    location :LocationType
}

type TagRatingType {
    id: Int,
    value: Int
}

type EventTagType {
    eventId: Int
    ratings: [TagRatingType]
}

type PeopleType {
    name: String
    age: Int
    tags: [TagRatingType]
    history: [EventTagType]
}

type AdminType {
    title: String
    events: [EventType]
    points: [PointType]
}

type TagType {
    id: Int
}

#Кружок
type ItemType {
    title: String
    events: [EventType]
    tags: [TagType]
}

type Query {
    admin(adminId: Int): AdminType

    #    events(page: Int, pageSize: Int): [EventType]
}

type Mutation {
    fakeMutation:Boolean
}
